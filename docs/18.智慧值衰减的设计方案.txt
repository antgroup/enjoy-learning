# 智慧值衰减设计方案

需求补充
1. 暂时不需要 批量获取知识点当前智慧值 的设计
2.

## 1. 设计背景与目标

### 1.1 设计背景
智慧值衰减机制是"快乐学习"软件智慧值系统的核心组成部分，基于艾宾浩斯遗忘曲线理论，模拟人类记忆自然衰减的过程，为用户提供科学的学习反馈和复习提醒。通过智慧值的动态变化，用户可以直观感知知识保留状况，形成良性的学习-复习循环。

### 1.2 设计目标
- **科学性**：基于认知科学理论，准确模拟记忆衰减规律
- **可视化**：让知识衰减过程直观可见，增强用户感知
- **激励性**：通过衰减机制驱动用户进行及时复习
- **个性化**：根据知识特性和用户学习特点调整衰减参数
- **简化实现**：在保证科学性的前提下，优化实现复杂度

## 2. 艾宾浩斯遗忘曲线模型

### 2.1 经典遗忘曲线
艾宾浩斯遗忘曲线描述了人类记忆随时间衰减的规律：学习后记忆能力迅速下降，一天后仅能记住所学内容的33%左右。

### 2.2 记忆保持率计算
基础记忆保持率计算公式：

```
记忆保持率(t) = e^(-t/S)
```

其中：
- t：距离上次学习/复习的时间（小时）
- S：记忆稳定性参数（初始值为24小时）
- e：自然对数的底数（约2.718）

### 2.3 记忆稳定性
记忆稳定性(S)表示记忆的牢固程度，影响衰减速度：
- S值越大，记忆衰减越慢
- 每次复习都会提高S值
- 不同复习方式对S值的提升效果不同

## 3. 智慧值衰减核心机制

### 3.1 基础衰减模型

#### 3.1.1 当前智慧值计算
```
当前智慧值 = 基础智慧值 × 记忆保持率
```

#### 3.1.2 记忆保持率计算（标准版）
```
记忆保持率(t) = e^(-t/S) × 个性化系数
```

#### 3.1.3 记忆保持率计算（简化版）
```
记忆保持率(t) = e^(-t/S)
```
其中S为固定值，不考虑个性化调整。

### 3.2 分阶段衰减模型
为了更准确模拟人类记忆特点，智慧值衰减分为四个阶段，每个阶段的衰减速率不同：

**第一阶段（0-24小时）**：
- 衰减率：20%
- 特点：短期记忆向长期记忆转化阶段，衰减较快

**第二阶段（1-7天）**：
- 衰减率：30%
- 特点：未巩固的记忆快速遗忘阶段，衰减最快

**第三阶段（7-30天）**：
- 衰减率：25%
- 特点：长期记忆的自然衰减阶段，衰减速度中等

**第四阶段（30天以上）**：
- 衰减率：15%
- 特点：深层记忆的缓慢衰减阶段，衰减较慢

分阶段衰减计算公式：
```
记忆保持率(t) = 初始保持率 × (1 - 当前阶段衰减率 × 阶段内时间比例)
```

### 3.3 智慧值衰减影响因素

#### 3.3.1 知识关联度
知识点与其他知识点的关联程度会影响衰减速度：
- 高关联知识：衰减减缓20%（与多个已掌握知识点相关）
- 中等关联知识：标准衰减（与少量已掌握知识点相关）
- 低关联知识：衰减加快20%（与已掌握知识点关联很少）

#### 3.3.2 知识使用频率
知识点的实际使用频率会影响衰减速度：
- 经常使用：衰减减缓30%（每周多次使用）
- 偶尔使用：衰减减缓10%（每月数次使用）
- 很少使用：标准衰减（几个月使用一次）
- 从不使用：衰减加快20%（学习后从未实际应用）

#### 3.3.3 知识类型系数
不同类型的知识衰减速度不同：
- 理解性知识（1.2）：原理、逻辑等需要理解的知识，衰减最慢
- 实践技能（1.1）：操作、应用等具体技能，衰减较慢
- 理论知识（1.0）：概念、原理等抽象知识，标准衰减
- 记忆性知识（0.9）：事实、数据等需要记忆的知识，衰减较快

## 4. 复习对抗衰减机制

### 4.1 复习时间节点
基于艾宾浩斯遗忘曲线的最佳复习时间安排：

1. **第一次复习**：学习后20分钟-2小时
2. **第二次复习**：学习后1天
3. **第三次复习**：学习后2-3天
4. **第四次复习**：学习后7天
5. **第五次复习**：学习后15天
6. **第六次复习**：学习后30天
7. **长期复习**：每60天一次

### 4.2 复习效果与智慧值恢复

#### 4.2.1 不同复习方式的效果
不同复习方式对智慧值恢复和记忆稳定性提升的效果：

**简单复习（Quick Review）**：
- 快速浏览、选择题练习
- 智慧值恢复至70%基础值
- 记忆稳定性提升1.2倍

**标准复习（Standard Review）**：
- 重新学习、综合练习
- 智慧值恢复至100%基础值
- 记忆稳定性提升1.5倍

**深度复习（Deep Review）**：
- 应用实践、案例分析
- 智慧值恢复至120%基础值
- 记忆稳定性提升2.0倍

**创造性复习（Creative Review）**：
- 教学他人、创新应用
- 智慧值恢复至150%基础值
- 记忆稳定性提升2.5倍

#### 4.2.2 复习后智慧值计算
```
复习后智慧值 = 基础智慧值 × 复习方式恢复系数
复习后记忆稳定性 = 当前记忆稳定性 × 复习方式提升系数
```

### 4.3 复习优先级算法

#### 4.3.1 紧急度计算
```
紧急度 = (1 - 当前记忆保持率) × 知识重要性 × 时间权重
```

#### 4.3.2 复习推荐策略
- **红色警报**：记忆保持率<30%，立即复习
- **黄色提醒**：记忆保持率30-60%，建议今日复习
- **绿色状态**：记忆保持率>60%，状态良好

## 5. 智慧值衰减的可视化

### 5.1 知识点智慧值衰减展示

#### 5.1.1 知识树中的智慧值显示
- **节点颜色深度**：反映智慧值高低
- **节点大小**：智慧值越高节点越大
- **闪烁效果**：新获得智慧值时的动画
- **衰减警告**：即将大幅衰减的知识点用橙色标记

#### 5.1.2 智慧值详情卡片
- **当前智慧值**：数值和百分比
- **衰减状态**：健康/注意/危险
- **下次复习时间**：倒计时显示
- **历史变化**：小型图表显示

### 5.2 记忆健康度仪表盘

#### 5.2.1 整体健康度
```
记忆健康度 = (当前总智慧值 / 历史最高智慧值) × 100%
```

- **优秀（90-100%）**：💚 绿色
- **良好（80-89%）**：💛 黄色
- **一般（70-79%）**：🧡 橙色
- **需要关注（<70%）**：❤️ 红色

#### 5.2.2 分类健康度
按知识领域分别显示健康度，帮助用户识别需要加强的领域。

## 6. 数据模型设计

### 6.1 智慧值记录表
```sql
CREATE TABLE wisdom_records (
    id BIGINT PRIMARY KEY AUTO_INCREMENT,
    user_id BIGINT NOT NULL,
    knowledge_point_id BIGINT NOT NULL,
    base_wisdom_value DECIMAL(10,2) NOT NULL,
    current_wisdom_value DECIMAL(10,2) NOT NULL,
    memory_stability DECIMAL(10,2) DEFAULT 24.0,
    last_study_time TIMESTAMP NOT NULL,
    last_review_time TIMESTAMP,
    review_count INT DEFAULT 0,
    difficulty_level ENUM('beginner', 'intermediate', 'advanced', 'expert'),
    importance_level ENUM('auxiliary', 'general', 'important', 'core'),
    knowledge_type ENUM('theoretical', 'practical', 'memory', 'understanding'),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_user_knowledge (user_id, knowledge_point_id),
    INDEX idx_last_study (last_study_time),
    INDEX idx_review_time (last_review_time)
);
```

### 6.2 复习记录表
```sql
CREATE TABLE review_records (
    id BIGINT PRIMARY KEY AUTO_INCREMENT,
    user_id BIGINT NOT NULL,
    knowledge_point_id BIGINT NOT NULL,
    review_type ENUM('quick', 'standard', 'deep', 'creative'),
    review_score DECIMAL(5,2),
    time_spent INT, -- 复习时间（分钟）
    wisdom_gained DECIMAL(10,2),
    memory_stability_before DECIMAL(10,2),
    memory_stability_after DECIMAL(10,2),
    review_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_user_time (user_id, review_time),
    INDEX idx_knowledge_point (knowledge_point_id)
);
```

## 7. API接口设计

### 7.1 智慧值衰减计算接口

#### 7.1.1 获取知识点当前智慧值
```
GET /api/wisdom/knowledge-point/{knowledgePointId}/current
```
响应：
```json
{
    "knowledgePointId": 123,
    "knowledgePointName": "JavaScript基础",
    "baseWisdomValue": 150.0,
    "currentWisdomValue": 98.5,
    "memoryRetentionRate": 65.7,
    "lastStudyTime": "2024-01-15T10:30:00Z",
    "lastReviewTime": "2024-01-20T14:20:00Z",
    "nextReviewTime": "2024-01-22T14:20:00Z",
    "memoryStability": 36.0,
    "reviewCount": 3,
    "urgencyLevel": "medium"
}
```

#### 7.1.2 批量获取知识点当前智慧值
```
POST /api/wisdom/knowledge-points/current
```
请求：
```json
{
    "knowledgePointIds": [123, 124, 125]
}
```
响应：
```json
{
    "knowledgePoints": [
        {
            "knowledgePointId": 123,
            "currentWisdomValue": 98.5,
            "memoryRetentionRate": 65.7,
            "urgencyLevel": "medium"
        },
        // ...其他知识点
    ]
}
```

### 7.2 复习相关接口

#### 7.2.1 获取复习建议
```
GET /api/wisdom/review-recommendations/{userId}
```
响应：
```json
{
    "urgentReviews": [
        {
            "knowledgePointId": 123,
            "name": "JavaScript基础",
            "urgencyLevel": "high",
            "memoryRetentionRate": 25.3,
            "estimatedTime": 20,
            "wisdomRecoveryPotential": 85.2
        }
    ],
    "todayRecommendations": [...],
    "weeklyPlan": [...]
}
```

#### 7.2.2 复习完成后更新智慧值
```
POST /api/wisdom/review-complete
```
请求：
```json
{
    "userId": 12345,
    "knowledgePointId": 123,
    "reviewType": "standard",
    "reviewScore": 92,
    "timeSpent": 25
}
```
响应：
```json
{
    "wisdomRecovered": 135.0,
    "memoryStabilityImproved": 1.5,
    "newCurrentWisdom": 142.8,
    "nextReviewTime": "2024-02-05T14:20:00Z"
}
```

## 8. 实现策略

### 8.1 智慧值衰减计算流程

#### 8.1.1 智慧值衰减计算步骤

**步骤1：获取基础数据**
```
从 wisdom_records 表获取：
- base_wisdom_value（基础智慧值）
- last_study_time（最后学习时间）
- last_review_time（最后复习时间）
- memory_stability（记忆稳定性，默认24小时）
```

**步骤2：计算时间差**
```
计算距离上次学习/复习的时间差：
- 如果有复习记录，使用 last_review_time
- 否则使用 last_study_time
- 时间差 t = 当前时间 - 最后活动时间（转换为小时）
```

**步骤3：计算记忆保持率**
```
简化版公式：
记忆保持率 = e^(-t/24)

分阶段版公式：
if (t <= 24小时):
    衰减率 = 20%
    记忆保持率 = 1 - (0.2 * t/24)
elif (t <= 7天):
    衰减率 = 30%
    记忆保持率 = 0.8 - (0.3 * (t-24)/(7*24-24))
elif (t <= 30天):
    衰减率 = 25%
    记忆保持率 = 0.5 - (0.25 * (t-7*24)/(30*24-7*24))
else:
    衰减率 = 15%
    记忆保持率 = 0.25 - (0.15 * (t-30*24)/(∞))
```

**步骤4：计算当前智慧值**
```
当前智慧值 = 基础智慧值 × 记忆保持率
```

### 8.2 智慧值更新处理逻辑

#### 8.2.1 场景1：定时批量更新（每日凌晨执行）
```
1. 查询所有活跃知识点（30天内有学习或复习记录）
2. 批量计算每个知识点的当前智慧值
3. 更新 wisdom_records 表的 current_wisdom_value 字段
4. 更新 updated_at 时间戳
```

#### 8.2.2 场景2：实时查询更新
```
1. 用户查询知识点智慧值时
2. 检查 updated_at 是否超过12小时
3. 如果超过，重新计算并更新数据库
4. 同时更新Redis缓存
```

#### 8.2.3 场景3：复习完成后更新
```
1. 用户完成复习后调用 /api/wisdom/review-complete 接口
2. 根据复习类型计算恢复系数：
   - 简单复习：70%恢复 + 记忆稳定性×1.2
   - 标准复习：100%恢复 + 记忆稳定性×1.5
   - 深度复习：120%恢复 + 记忆稳定性×2.0
   - 创造性复习：150%恢复 + 记忆稳定性×2.5
3. 更新智慧值：新智慧值 = 基础智慧值 × 恢复系数
4. 更新记忆稳定性参数
5. 记录复习行为到 review_records 表
6. 更新 last_review_time 和 review_count
```

### 8.3 缓存更新策略

#### 8.3.1 Redis缓存键设计
```
wisdom:user:{userId}:knowledge:{knowledgePointId} = {
    "currentWisdom": 98.5,
    "retentionRate": 65.7,
    "lastCalculated": "2024-01-22T10:30:00Z",
    "urgencyLevel": "medium"
}
```

#### 8.3.2 缓存更新时机
- 定时批量更新后批量更新缓存
- 实时计算后立即更新对应缓存
- 复习完成后更新相关知识点缓存
- 缓存过期时间设置为12小时

### 8.4 智慧值衰减计算优化

#### 8.4.1 定时计算vs实时计算
- **定时计算**：每日凌晨批量计算所有知识点的衰减值，更新数据库
- **实时计算**：用户查询时实时计算当前智慧值，不预先存储
- **混合策略**：定时计算+缓存+必要时实时计算

#### 8.4.2 推荐实现方案
采用混合策略：
1. 每日凌晨计算并更新所有活跃知识点（30天内有学习或复习记录）
2. 用户查询时，如果上次计算时间超过12小时，则实时重新计算
3. 使用Redis缓存热点知识点的当前智慧值，提高查询性能

### 8.2 简化实现版本（第一阶段）

#### 8.2.1 简化衰减公式
```
记忆保持率(t) = e^(-t/24)
```
不考虑记忆稳定性参数的动态调整，使用固定值24小时。

#### 8.2.2 简化影响因素
第一阶段只考虑时间因素，不考虑知识关联度、使用频率等复杂因素。

#### 8.2.3 简化复习机制
- 只区分标准复习（恢复至100%）和简单复习（恢复至70%）
- 不调整记忆稳定性参数

### 8.3 扩展实现版本（后续阶段）

#### 8.3.1 引入个性化参数
根据用户学习历史数据，调整个性化的记忆稳定性参数。

#### 8.3.2 引入知识关联网络
构建知识点之间的关联网络，分析知识关联度对衰减的影响。

#### 8.3.3 引入使用频率跟踪
记录用户对知识点的实际使用情况，动态调整衰减速率。

## 9. 性能与扩展性考虑

### 9.1 性能优化
- 使用缓存减少实时计算压力
- 批量处理衰减计算任务
- 对不活跃知识点降低计算频率

### 9.2 扩展性设计
- 参数化衰减模型，便于调整和优化
- 预留个性化扩展接口
- 支持不同学科领域的特定衰减规则

### 9.3 监控指标
- 智慧值计算响应时间
- 批量计算任务耗时
- 用户复习完成率
- 记忆保持率提升效果

## 10. 结论与建议

智慧值衰减机制是"快乐学习"软件的核心创新点，通过科学模拟记忆衰减过程，为用户提供及时的学习反馈和复习指导。建议采用分阶段实施策略，先实现基础的时间衰减模型，后续逐步引入个性化参数和复杂影响因素，不断优化用户体验和学习效果。

在实施过程中，应重点关注：
1. 衰减算法的科学性与用户体验的平衡
2. 计算性能与实时性的平衡
3. 通过用户反馈持续优化参数
4. 结合数据分析验证衰减模型的有效性

通过合理设计和实施智慧值衰减机制，可以有效帮助用户建立科学的学习-复习习惯，提高知识保留效果，实现真正的高效学习。
